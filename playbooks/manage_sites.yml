---

- hosts: 
    - website_hosts
  become: true
  become_method: sudo
  gather_facts: true
  
  roles:
    - role: dockerhost
      vars:
        docker_users:
          - "{{ ansible_user }}"
  
  tasks:
    
    - name: Distribution
      debug: msg="{{ ansible_distribution }}"
    - name: Distribution version
      debug: msg="{{ ansible_distribution_version}}"
    - name: Distribution major version
      debug: msg="{{ ansible_distribution_major_version }}"
    
    - name: "Ensure restic is installed and updated"
      ansible.builtin.include_tasks:
        file: restic_install_update.yml
    
    #NOTE: Wordpress site specific setup
    #not needed if only hosting Omeka sites on host
    - name: "Copy WordPress supporting files"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/home/{{ ansible_user }}/{{ item }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - docker-compose-wp.yml
      register: copy_wp_supporting_files
    
    #NOTE: Omeka-S site specific setup
    #not needed if only hosting WordPress sites on host
    - name: "Copy Omeka-S supporting files"
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/home/{{ ansible_user }}/{{ item }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
      loop:
        - docker-compose-om.yml
        - docker-entrypoint.sh
      register: copy_om_supporting_files
      
    - name: "Create Omeka-S Dockerfile"
      ansible.builtin.template:
        src: Dockerfile_om.j2
        dest: "/home/{{ ansible_user }}/Dockerfile_om"
        owner:  "{{ ansible_user }}"
        group:  "{{ ansible_user }}"
      register: create_om_dockerfile
      
    - name: "Create Omeka-S CLI Dockerfile"
      ansible.builtin.template:
        src: Dockerfile_om_cli.j2
        dest: "/home/{{ ansible_user }}/Dockerfile_om_cli"
        owner:  "{{ ansible_user }}"
        group:  "{{ ansible_user }}"
      register: create_om_cli_dockerfile
      
    - name: "Ensure Omeka-S CLI docker image built"
      ansible.builtin.include_tasks:
        file: om_build_cli_image.yml
      when: create_om_cli_dockerfile.changed
      
    - name: "Manage WordPress sites"
      ansible.builtin.include_tasks:
        file: wp_manage_site.yml
      when: site.wp_settings is defined
      loop: "{{ sites }}"
      loop_control:
        label: "{{ item.id }}"
      vars:
        site: "{{ item }}"
    
    - name: "Manage Omeka sites"
      ansible.builtin.include_tasks:
        file: om_manage_site.yml
      when: site.om_settings is defined
      loop: "{{ sites }}"
      loop_control:
        label: "{{ item.id }}"
      vars:
        site: "{{ item }}"
