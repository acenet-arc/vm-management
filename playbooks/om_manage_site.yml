- name: "Managinag OmekaS Site {{ site.id }}"
  ansible.builtin.debug:
    msg: "Managing {{ site.id }}"

- name: "Set compose file to docker-compose-om.yml"
  ansible.builtin.set_fact:
    compose_file: "docker-compose-om.yml"

- name: "Restore from backup if needed"
  ansible.builtin.include_tasks:
    file: restore_site_from_backup_if_needed.yml

- name: "Make site directories as needed"
  ansible.builtin.include_tasks:
    file: make_site_directories_as_needed.yml

- name: "Compose down if supporting files changed"
  ansible.builtin.include_tasks:
    file: compose_down.yml
  when: copy_om_supporting_files.changed

- name: "Bring compose project up for {{ site.id }} if needed"
  ansible.builtin.include_tasks:
    file: compose_up_if_needed.yml

- name: "Load database for {{ site.id }} if restoring from backup"
  ansible.builtin.include_tasks:
    file: load_database.yml
  when: restored[site.id]

- name: "Initialize omeka-s site {{ site.id }} if needed"
  ansible.builtin.include_tasks:
    file: om_initialize_site_if_needed.yml
    
- name: "Set site {{ site.id }} file permissions"
  ansible.builtin.include_tasks:
    file: om_set_file_permissions.yml
    
- name: "Ensure only specified themes installed for {{ site.id }}"
  ansible.builtin.include_tasks:
    file: om_ensure_only_specified_themes_installed.yml

- name: "Ensure only specified modules installed for {{ site.id }}"
  ansible.builtin.include_tasks:
    file: om_ensure_only_specified_modules_installed.yml

- ansible.builtin.debug:
    msg: "site.backup.perform_backup is defined={{ site.backup.perform_backup is defined }}"

- ansible.builtin.debug:
    msg: "site.backup.perform_backup ={{ site.backup.perform_backup }}"
  when: site.backup.perform_backup is defined

- name: "Backup site {{ site.id }}"
  ansible.builtin.include_tasks:
    file: backup_site.yml
  when: not (site.backup.perform_backup is defined) or site.backup.perform_backup

- name: "Update Omeka site {{ site.id }}"
  ansible.builtin.include_tasks:
    file: om_update_site.yml

